{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arosek/Desktop/instagram-clone/instagram/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Post from './Post.js';\nimport { database } from \"./firebase\";\nimport Modal from \"@material-ui/core/Modal\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    height: 390,\n    width: 300,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ddd',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  const [posts, setPosts] = useState([]); //this is for the login modal(a small piece of dialog-box which will take username and pass)\n\n  const [open, setOpen] = useState(false); //this will close the login modal\n\n  const closeHandler = () => {\n    setOpen(false);\n  }; //this is the modal(dialog-box design)\n\n\n  const body = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"modal-insta-logo\",\n      src: \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\",\n      alt: \"insta-letter-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"this is the modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n\n  useEffect(() => {\n    database.collection('posts').onSnapshot(snapshot => {\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        posts: doc.data()\n      })));\n    });\n  }, []); //not dependent on posts now. cause we are mapping document id with each post.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      close: closeHandler,\n      className: classes.paper,\n      style: modalStyle,\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"nav-bar-image\",\n        src: \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\",\n        alt: \"insta-letter-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setOpen(true),\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), posts.map(({\n      id,\n      posts\n    }) => /*#__PURE__*/_jsxDEV(Post, {\n      //mapping document id so that react doesn't re-render a post that is already showing.\n      userName: posts.userName,\n      captions: posts.captions,\n      imageUrl: posts.imageUrl,\n      postAvatar: posts.postAvatar\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"iIY/RezjWEmHErQtxgw+ZNQr6lI=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/arosek/Desktop/instagram-clone/instagram/src/App.js"],"names":["React","useState","useEffect","Post","database","Modal","makeStyles","Button","getModalStyle","top","left","transform","useStyles","theme","paper","position","height","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","modalStyle","posts","setPosts","open","setOpen","closeHandler","body","collection","onSnapshot","snapshot","docs","map","doc","id","data","userName","captions","imageUrl","postAvatar"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Post from './Post.js'\nimport {database} from \"./firebase\";\nimport Modal from \"@material-ui/core/Modal\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        height: 390,\n        width: 300,\n        backgroundColor: theme.palette.background.paper,\n        border: '1px solid #ddd',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nfunction App() {\n\n    const classes = useStyles();\n    const [modalStyle] = useState(getModalStyle);\n    const [posts, setPosts] =useState([]);\n    //this is for the login modal(a small piece of dialog-box which will take username and pass)\n    const [open, setOpen] = useState (false);\n\n    //this will close the login modal\n    const closeHandler = () => {\n        setOpen(false);\n    };\n\n    //this is the modal(dialog-box design)\n    const body = (\n        <div style={modalStyle}\n             className={classes.paper}>\n            <img\n                 className=\"modal-insta-logo\"\n                 src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                 alt=\"insta-letter-logo\"/>\n            <h2>this is the modal</h2>\n        </div>\n    );\n\n    useEffect(() => {\n        database.collection('posts').onSnapshot(snapshot => {\n            setPosts(snapshot.docs.map(doc => ({id: doc.id, posts: doc.data()})));\n        })},\n        []);\n    //not dependent on posts now. cause we are mapping document id with each post.\n\n  return (\n    <div className = \"app\">\n        <Modal\n            open={open}\n            close={closeHandler}\n            className={classes.paper}\n            style={modalStyle}>\n            {body}\n        </Modal>\n      <div className= \"nav-bar\">\n          <img className=\"nav-bar-image\"\n               src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n               alt=\"insta-letter-logo\"\n          />\n      </div>\n\n        <Button\n            onClick={() => setOpen(true)}>\n            Sign Up\n        </Button>\n        {\n            posts.map(({id, posts}) => (\n                <Post\n\n                    key={id}\n                    //mapping document id so that react doesn't re-render a post that is already showing.\n                    userName={posts.userName}\n                    captions={posts.captions}\n                    imageUrl={posts.imageUrl}\n                    postAvatar={posts.postAvatar}/>\n            ))\n        }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}