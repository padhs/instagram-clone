{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arosek/Desktop/instagram-clone/instagram/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Post from './Post.js';\nimport { database } from \"./firebase\";\nimport Modal from \"@material-ui/core\";\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([]); //this is for the login modal(a small piece of dialog-box which will take username and pass)\n\n  const [open, setOpen] = useState(false); //this will close the login modal\n\n  const closeHandler = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    database.collection('posts').onSnapshot(snapshot => {\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        posts: doc.data()\n      })));\n    });\n  }, []); //not dependent on posts now. cause we are mapping document id with each post.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      close: closeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"nav-bar-image\",\n        src: \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\",\n        alt: \"insta-letter-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), posts.map(({\n      id,\n      posts\n    }) => /*#__PURE__*/_jsxDEV(Post, {\n      //mapping document id so that react doesn't re-render a post that is already showing.\n      userName: posts.userName,\n      captions: posts.captions,\n      imageUrl: posts.imageUrl,\n      postAvatar: posts.postAvatar\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UWGEaOg5/o04AkyKq0mj81vmkgA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/arosek/Desktop/instagram-clone/instagram/src/App.js"],"names":["React","useState","useEffect","Post","database","Modal","getModalStyle","top","rand","left","transform","App","posts","setPosts","open","setOpen","closeHandler","collection","onSnapshot","snapshot","docs","map","doc","id","data","userName","captions","imageUrl","postAvatar"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAEA,SAASC,aAAT,GAAyB;AACrB,QAAMC,GAAG,GAAG,KAAKC,IAAI,EAArB;AACA,QAAMC,IAAI,GAAG,KAAKD,IAAI,EAAtB;AAEA,SAAO;AACHD,IAAAA,GAAG,EAAG,GAAEA,GAAI,GADT;AAEHE,IAAAA,IAAI,EAAG,GAAEA,IAAK,GAFX;AAGHC,IAAAA,SAAS,EAAG,cAAaH,GAAI,OAAME,IAAK;AAHrC,GAAP;AAKH;;AAED,SAASE,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBZ,QAAQ,CAAC,EAAD,CAAjC,CAFW,CAGX;;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAE,KAAF,CAAhC,CAJW,CAMX;;AACA,QAAMe,YAAY,GAAG,MAAM;AACvBD,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,QAAQ,CAACa,UAAT,CAAoB,OAApB,EAA6BC,UAA7B,CAAwCC,QAAQ,IAAI;AAChDN,MAAAA,QAAQ,CAACM,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,GAAG,KAAK;AAACC,QAAAA,EAAE,EAAED,GAAG,CAACC,EAAT;AAAaX,QAAAA,KAAK,EAAEU,GAAG,CAACE,IAAJ;AAApB,OAAL,CAArB,CAAD,CAAR;AACH,KAFD;AAEG,GAHE,EAIL,EAJK,CAAT,CAXW,CAgBX;;AAGF,sBACE;AAAK,IAAA,SAAS,EAAG,KAAjB;AAAA,4BACI,QAAC,KAAD;AACI,MAAA,IAAI,EAAEV,IADV;AAEI,MAAA,KAAK,EAAEE;AAFX;AAAA;AAAA;AAAA;AAAA,YADJ,eAKE;AAAK,MAAA,SAAS,EAAE,SAAhB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AACK,QAAA,GAAG,EAAC,uFADT;AAEK,QAAA,GAAG,EAAC;AAFT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALF,EAYQJ,KAAK,CAACS,GAAN,CAAU,CAAC;AAACE,MAAAA,EAAD;AAAKX,MAAAA;AAAL,KAAD,kBACN,QAAC,IAAD;AAGI;AACA,MAAA,QAAQ,EAAEA,KAAK,CAACa,QAJpB;AAKI,MAAA,QAAQ,EAAEb,KAAK,CAACc,QALpB;AAMI,MAAA,QAAQ,EAAEd,KAAK,CAACe,QANpB;AAOI,MAAA,UAAU,EAAEf,KAAK,CAACgB;AAPtB,OAESL,EAFT;AAAA;AAAA;AAAA;AAAA,YADJ,CAZR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA7CQZ,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Post from './Post.js'\nimport {database} from \"./firebase\";\nimport Modal from \"@material-ui/core\";\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nfunction App() {\n\n    const [posts, setPosts] =useState([]);\n    //this is for the login modal(a small piece of dialog-box which will take username and pass)\n    const [open, setOpen] = useState (false);\n\n    //this will close the login modal\n    const closeHandler = () => {\n        setOpen(false);\n    };\n\n    useEffect(() => {\n        database.collection('posts').onSnapshot(snapshot => {\n            setPosts(snapshot.docs.map(doc => ({id: doc.id, posts: doc.data()})));\n        })},\n        []);\n    //not dependent on posts now. cause we are mapping document id with each post.\n\n\n  return (\n    <div className = \"app\">\n        <Modal\n            open={open}\n            close={closeHandler}>\n        </Modal>\n      <div className= \"nav-bar\">\n          <img className=\"nav-bar-image\"\n               src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n               alt=\"insta-letter-logo\"\n          />\n      </div>\n        {\n            posts.map(({id, posts}) => (\n                <Post\n\n                    key={id}\n                    //mapping document id so that react doesn't re-render a post that is already showing.\n                    userName={posts.userName}\n                    captions={posts.captions}\n                    imageUrl={posts.imageUrl}\n                    postAvatar={posts.postAvatar}/>\n            ))\n        }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}