[{"/home/arosek/instagram-clone/instagram/src/index.js":"1","/home/arosek/instagram-clone/instagram/src/reportWebVitals.js":"2","/home/arosek/instagram-clone/instagram/src/App.js":"3","/home/arosek/instagram-clone/instagram/src/Post.js":"4","/home/arosek/instagram-clone/instagram/src/firebase.js":"5"},{"size":500,"mtime":1612258207047,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1612258207047,"results":"8","hashOfConfig":"7"},{"size":17899,"mtime":1612533346842,"results":"9","hashOfConfig":"7"},{"size":1348,"mtime":1612452303959,"results":"10","hashOfConfig":"7"},{"size":729,"mtime":1612258207047,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"189in14",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/arosek/instagram-clone/instagram/src/index.js",[],["25","26"],"/home/arosek/instagram-clone/instagram/src/reportWebVitals.js",[],"/home/arosek/instagram-clone/instagram/src/App.js",["27","28"],"import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Post from './Post.js'\nimport { database, auth } from \"./firebase\";\nimport Modal from \"@material-ui/core/Modal\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport Input from \"@material-ui/core/Input\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport UseAnimations from \"react-useanimations\";\nimport explore from 'react-useanimations/lib/explore'\nimport settings from 'react-useanimations/lib/settings'\nimport heart from 'react-useanimations/lib/heart'\nimport mail from 'react-useanimations/lib/mail'\nimport HomeIcon from '@material-ui/icons/Home';\nimport searchToX from 'react-useanimations/lib/searchToX'\n\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'relative',\n        width: 700,\n        backgroundColor: theme.palette.background.paper,\n        border: '1px solid #ddd',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nfunction App() {\n\n    //declare the animations:\n\n    const classes = useStyles();\n    const [modalStyle] = useState(getModalStyle);\n    const [posts, setPosts] =useState([]);\n    //this is for the login modal(a small piece of dialog-box which will take username and pass)\n    const [open, setOpen] = useState (false);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [user, setUser] = useState(null);\n    const [username, setUsername] = useState('')\n    const [openSignIn, setOpenSignIn] = useState(true);\n    //user is understood as an object.\n    //By default there is no user (so null) useState is going to change the object type when there is a user logged in (not null).\n\n    const handleSignIn = (event) => {\n        event.preventDefault();\n        //removal of this would result the user never being able to log in.\n        //preventDefault does not refresh the page, that it would do by-default when we hit the login button.\n        auth.createUserWithEmailAndPassword(email, password)\n            .then((authUser => {\n                return authUser.user.updateProfile({\n                    displayName: username\n                })\n            }))\n            .catch((error) => alert(error.message));\n        setOpen(false);\n        setOpenSignIn(false);\n    }\n\n    const logIn = (event) => {\n        event.preventDefault();\n        auth\n            .signInWithEmailAndPassword(email, password)\n            .catch((error) => alert(error.message));\n        setOpenSignIn(false);\n        setOpen(false);\n    }\n\n\n    //this is the modal(dialog-box design)\n    //modal for signup. not for login\n    const body = (\n        <div className=\"modal-insta-logo\">\n            <img className=\"modal-phone-pic\"\n                 src=\"https://firebasestorage.googleapis.com/v0/b/instagram-clone-7a115.appspot.com/o/normalphone.png?alt=media&token=bf47c0ad-9094-4f50-b785-31370285570b\"\n                 alt=\"phone-image\"/>\n            <form className=\"signup-form\">\n                <img\n                    className=\"insta-logo-login\"\n                    width=\"174.99\"\n                    height=\"50.99\"\n                    src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                    alt=\"insta-letter-logo\"/>\n                <Input\n                    className=\"username-login\"\n                    placeholder=\"username\"\n                    type=\"text\"\n                    value={username}\n                    onChange={(username) => setUsername(username.target.value)}/>\n                <Input\n                    className=\"email-login\"\n                    placeholder=\"email\"\n                    type=\"text\"\n                    value={email}\n                    onChange={(email) => setEmail(email.target.value)} />\n\n                <Input\n                    className=\"pass-login\"\n                    placeholder=\"password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(pass) => setPassword(pass.target.value)} />\n\n                <Button\n                    className=\"signin-button\"\n                    onClick={handleSignIn}\n                    type=\"submit\">\n                    SIGN UP\n                </Button>\n                <p className=\"i-account\">\n                    I have an account. Login instead.\n                </p>\n                <Button\n                    className=\"login-in-signin-modal\"\n                    onClick={() => setOpen(false)}>\n                    LOG IN\n                </Button>\n\n            </form>\n        </div>\n    );\n\n    //this code comes into work anytime when an user gets logged in or out as the state of the user(object) gets changed.\n    useEffect(() => {\n        const verifyUser = auth.onAuthStateChanged((authUser) => {\n         if (authUser) {\n             //user has logged in.\n             console.log(authUser);//this is for my convenience. not for the user.\n             setUser(authUser);//uses cookie tracking.(so this is persistent)\n             //state is not persistent\n         } else {\n             //user is not logged in. (logged out.)\n             setUser(null)\n         }\n\n        })\n        return () => {\n            //check if the user is spamming. (creating too many login sessions too quick)\n            verifyUser();\n            //detach the listener so that we don't have too many listeners created.(in case someone is out of their minds.)\n            //if the user didn't do that earlier, it will then fire the useEffect\n        }\n    }, [user, username]);\n\n    useEffect(() => {\n        database.collection('posts').onSnapshot(snapshot => {\n            setPosts(snapshot.docs.map(doc => ({id: doc.id, posts: doc.data()})));\n        })},\n        []);\n    //not dependent on posts now. cause we are mapping document id with each post.\n\n\n  return (\n    <div className = \"app\">\n        <Modal\n            //this is the modal for Sign Up.\n            open={open}\n            onClose={() => setOpen(false)}>\n            <div\n                className={classes.paper}\n                 style={modalStyle}>\n                 {body}\n            </div>\n        </Modal>\n\n        <Modal\n            //this is the modal for login. this should have a signup button(conditional rendering.)\n            open={openSignIn}>\n            <div\n                className={classes.paper}\n                style={modalStyle}>\n                <div className=\"modal-insta-logo\">\n                    <img className=\"modal-phone-pic\"\n                         src=\"https://firebasestorage.googleapis.com/v0/b/instagram-clone-7a115.appspot.com/o/normalphone.png?alt=media&token=bf47c0ad-9094-4f50-b785-31370285570b\"\n                         alt=\"phone-image\"/>\n                    <form className=\"signup-form\">\n                        <img\n                            className=\"insta-logo-login\"\n                            width=\"174.99\"\n                            height=\"50.99\"\n                            src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                            alt=\"insta-letter-logo\"/>\n\n                        <Input\n                            className=\"email-login\"\n                            placeholder=\"email\"\n                            type=\"text\"\n                            value={email}\n                            onChange={(email) => setEmail(email.target.value)} />\n\n                        <Input\n                            className=\"pass-login\"\n                            placeholder=\"password\"\n                            type=\"password\"\n                            value={password}\n                            onChange={(pass) => setPassword(pass.target.value)} />\n\n                        <Button\n                            className=\"signin-button\"\n                            onClick={logIn}\n                            type=\"submit\">\n                            LOG IN\n                        </Button>\n                        <p className=\"forgot-pass\">Forgot Password?</p>\n                        <div className=\"no-account\">\n                            <p className=\"signup-instead\">Dont have an account? Sign Up instead (click on the <strong>SIGN UP</strong> button down below.)</p>\n\n                            <Button\n                                className=\"login-button\"\n                                onClick={() => setOpen(true)}>\n                                SIGN UP\n                            </Button>\n\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </Modal>\n\n        <div className= \"nav-bar\">\n          <div className=\"nav-bar-image\">\n              <img src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                   alt=\"insta-letter-logo\"\n              />\n          </div>\n          <div className=\"search-bar\">\n              <div className=\"search-nav-buttons\">\n                  <UseAnimations\n                      animationKey=\"searchToX\"\n                      size={30}\n                      style={{ cursor: \"pointer\",padding: 100 }}\n                      animation={searchToX}/>\n                  <Input\n                        placeholder=\"Search...\"\n                        type=\"text\"/>\n              </div>\n          </div>\n          <div className=\"page-buttons\">\n              <div className=\"nav-buttons\">\n                  <HomeIcon style={{ fontSize: 30 }} />\n              </div>\n              <div className=\"nav-buttons\">\n                  <UseAnimations\n                      animationKey=\"mail\"\n                      size={30}\n                      style={{ cursor: \"pointer\",padding: 100 }}\n                      animation={mail}/>\n              </div>\n              <div className=\"nav-buttons\">\n                  <UseAnimations\n                      animationKey=\"explore\"\n                      size={30}\n                      style={{ cursor: \"pointer\",padding: 100 }}\n                      animation={explore}/>\n              </div>\n              <div className=\"nav-buttons\">\n                  <UseAnimations\n                      animationKey=\"heart\"\n                      size={30}\n                      style={{ cursor: \"pointer\",padding: 100 }}\n                      animation={heart}/>\n              </div>\n              <div className=\"nav-buttons\">\n                  <UseAnimations\n                      animationKey=\"settings\"\n                      size={30}\n                      style={{ cursor: \"pointer\",padding: 100 }}\n                      animation={settings}/>\n              </div>\n          </div>\n            {user ? <Button\n                className=\"logout-navbar-button\"\n                onClick={() => auth.signOut().then(() => setOpenSignIn(true))}>LOG OUT</Button> : <div>{/**/}</div>}\n      </div>\n        {user ?\n            <div className=\"app-container\">\n                <div className=\"app-login-container\">\n                    {\n                        posts.map(({id, posts}) => (\n                            <Post\n                                className=\"column-direction\"\n                                key={id}\n                                //mapping document id so that react doesn't re-render a post that is already showing.\n                                userName={posts.userName}\n                                captions={posts.captions}\n                                imageUrl={posts.imageUrl}\n                                postAvatar={posts.postAvatar}/>\n                        ))\n                    }\n                </div>\n                <div className=\"instagram-embed\">\n                    <div className=\"embed-unit\">\n                        <div className=\"one-flex-unit\">\n                            <Avatar\n                                className=\"embed-classname\"\n                                alt = \"embed-avatar\"\n                                src = \"https://thispersondoesnotexist.com/image\">\n                            </Avatar>\n                            <div className=\"embed-username\">\n                                <h5 className=\"embed-user\">\n                                    <strong>mark.Rober</strong>\n                                </h5>\n                                <p className=\"follow-by\">followed by padhs</p>\n                            </div>\n                        </div>\n                        <div className=\"folllow-button\">\n                            <p className=\"follow-me\"><strong>Follow</strong></p>\n                        </div>\n                    </div>\n                    <div className=\"suggestions\">\n                        <h4>Suggestions For You</h4>\n                    </div>\n                    <div className=\"embed-unit\">\n                        <div className=\"one-flex-unit\">\n                            <Avatar\n                                className=\"embed-classname\"\n                                alt = \"embed-avatar\"\n                                src = \"https://thispersondoesnotexist.com/image\">\n                            </Avatar>\n                            <div className=\"embed-username\">\n                                <h5 className=\"embed-user\">\n                                    <strong>@sish.Chanchlani Vines</strong>\n                                </h5>\n                                <p className=\"follow-by\">followed by dorkyhead</p>\n                            </div>\n                        </div>\n                        <div className=\"folllow-button\">\n                            <p className=\"follow-me\"><strong>Follow</strong></p>\n                        </div>\n                    </div>\n                    <div className=\"embed-unit\">\n                        <div className=\"one-flex-unit\">\n                            <Avatar\n                                className=\"embed-classname\"\n                                alt = \"embed-avatar\"\n                                src = \"https://thispersondoesnotexist.com/image\">\n                            </Avatar>\n                            <div className=\"embed-username\">\n                                <h5 className=\"embed-user\">\n                                    <strong>MKBHD</strong>\n                                </h5>\n                                <p className=\"follow-by\">followed by POTHI</p>\n                            </div>\n                        </div>\n                        <div className=\"folllow-button\">\n                            <p className=\"follow-me\"><strong>Follow</strong></p>\n                        </div>\n                    </div>\n                    <div className=\"embed-unit\">\n                        <div className=\"one-flex-unit\">\n                            <Avatar\n                                className=\"embed-classname\"\n                                alt = \"embed-avatar\"\n                                src = \"https://thispersondoesnotexist.com/image\">\n                            </Avatar>\n                            <div className=\"embed-username\">\n                                <h5 className=\"embed-user\">\n                                    <strong>unbx^^:_:^^therapy</strong>\n                                </h5>\n                                <p className=\"follow-by\">suggested for you</p>\n                            </div>\n                        </div>\n                        <div className=\"folllow-button\">\n                            <p className=\"follow-me\"><strong>Follow</strong></p>\n                        </div>\n                    </div>\n                    <div className=\"embed-unit\">\n                        <div className=\"one-flex-unit\">\n                            <Avatar\n                                className=\"embed-classname\"\n                                alt = \"embed-avatar\"\n                                src = \"https://thispersondoesnotexist.com/image\">\n                            </Avatar>\n                            <div className=\"embed-username\">\n                                <h5 className=\"embed-user\">\n                                    <strong>some.RANDOM.person</strong>\n                                </h5>\n                                <p className=\"follow-by\">suggested for you</p>\n                            </div>\n                        </div>\n                        <div className=\"folllow-button\">\n                            <p className=\"follow-me\"><strong>Follow</strong></p>\n                        </div>\n                    </div>\n                    <div className=\"embed-unit\">\n                        <div className=\"one-flex-unit\">\n                            <Avatar\n                                className=\"embed-classname\"\n                                alt = \"embed-avatar\"\n                                src = \"https://thispersondoesnotexist.com/image\">\n                            </Avatar>\n                            <div className=\"embed-username\">\n                                <h5 className=\"embed-user\">\n                                    <strong>#theCreator</strong>\n                                </h5>\n                                <p className=\"follow-by\">suggested for you</p>\n                            </div>\n                        </div>\n                        <div className=\"folllow-button\">\n                            <p className=\"follow-me\"><strong>Follow</strong></p>\n                        </div>\n                    </div>\n                </div>\n            </div>:\n            <div>{/*render nothing. It's an empty div container*/}\n            </div>\n        }\n    </div>\n  );\n}\n\nexport default App;","/home/arosek/instagram-clone/instagram/src/Post.js",[],"/home/arosek/instagram-clone/instagram/src/firebase.js",[],["29","30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":87,"column":13,"nodeType":"37","endLine":89,"endColumn":37},{"ruleId":"35","severity":1,"message":"36","line":186,"column":21,"nodeType":"37","endLine":188,"endColumn":45},{"ruleId":"31","replacedBy":"38"},{"ruleId":"33","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["40"],["41"],"no-global-assign","no-unsafe-negation"]