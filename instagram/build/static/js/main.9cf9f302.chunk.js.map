{"version":3,"sources":["Post.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Post","userName","captions","imageUrl","postAvatar","className","Avatar","alt","src","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","database","firestore","auth","storage","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","useState","modalStyle","posts","setPosts","open","setOpen","email","setEmail","password","setPassword","body","height","Input","placeholder","type","value","onChange","target","pass","Button","onClick","useEffect","collection","onSnapshot","snapshot","docs","map","doc","id","data","Modal","close","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cf9f302.chunk.js","sourcesContent":["import React from 'react';\nimport Avatar from \"@material-ui/core/Avatar\";\n\n\nfunction Post({userName, captions, imageUrl, postAvatar}) {\n\n    return(\n        <div className=\"Post\">\n                <div className=\"avatar\">\n                    <Avatar className=\"post-header\"\n                            alt = \"your-avatar\"\n                            src={postAvatar}>\n                    </Avatar>\n                    <h5 className=\"post-user-name-top\">{userName}</h5>\n\n                </div>\n\n            {/* eslint-disable-next-line jsx-a11y/img-redundant-alt */}\n            <img className = \"user-image\"\n                 src={imageUrl}\n                 alt=\"random-image\"\n            />\n            <div>\n                <h6 className= \"post-user-name-bottom\" >\n                    <strong className=\"post-description-name\">\n                        {userName}\n                        {/*this is the username below the post*/}\n                        {/*we use strong to replicate the bold tag in HTML.*/}\n                    </strong>\n                    {captions}\n                    {/*This is the user-set captions below the post.*/}\n                </h6>\n                {/*show different user comments*/}\n                {/*add a comment... (user who sees the post can add a comment and post button.)*/}\n            </div>\n        </div>\n    )\n}\n\nexport default Post\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyDItprGb3VhxiCSDGkug0QVSDBXKc75-YM\",\n    authDomain: \"instagram-clone-7a115.firebaseapp.com\",\n    projectId: \"instagram-clone-7a115\",\n    storageBucket: \"instagram-clone-7a115.appspot.com\",\n    messagingSenderId: \"842809887971\",\n    appId: \"1:842809887971:web:3581af80fe1bfff3bd89d6\",\n    measurementId: \"G-HDV3LQC4PK\"\n});\n\nconst database = firebaseApp.firestore();//deploy to the database\nconst auth = firebaseApp.auth();//firebase authorization\nconst storage = firebaseApp.storage();//cloud-hosting\n\n//export default firebaseApp\nexport {database, auth, storage};","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Post from './Post.js'\nimport {database} from \"./firebase\";\nimport Modal from \"@material-ui/core/Modal\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport Input from \"@material-ui/core/Input\";\n\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'relative',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '1px solid #ddd',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nfunction App() {\n\n    const classes = useStyles();\n    const [modalStyle] = useState(getModalStyle);\n    const [posts, setPosts] =useState([]);\n    //this is for the login modal(a small piece of dialog-box which will take username and pass)\n    const [open, setOpen] = useState (false);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    //this will close the login modal\n    const closeHandler = () => {\n        setOpen(false);\n    };\n\n    const handleLogIn = () => {\n        return(\n            <div>\n\n            </div>\n        );\n    }\n    //this is the modal(dialog-box design)\n    const body = (\n        <div className=\"modal-insta-logo\">\n            <form className=\"signup-form\">\n                <img\n                    className=\"insta-logo-login\"\n                    width=\"174.99\"\n                    height=\"50.99\"\n                    src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                    alt=\"insta-letter-logo\"/>\n                <Input\n                    className=\"username-login\"\n                    placeholder=\"email\"\n                    type=\"text\"\n                    value={email}\n                    onChange={(email) => setEmail(email.target.value)} />\n\n                <Input\n                    className=\"pass-login\"\n                    placeholder=\"password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(pass) => setPassword(pass.target.value)} />\n\n                <Button\n                    className=\"login-button\"\n                    onClick={handleLogIn()}>\n                    Log In\n                </Button>\n                <p className=\"forgot-pass\">Forgot Password?</p>\n                <div className=\"no-account\">\n                    <p className=\"signup-instead\">Dont have an account? Sign Up instead</p>\n                </div>\n\n            </form>\n        </div>\n    );\n\n    useEffect(() => {\n        database.collection('posts').onSnapshot(snapshot => {\n            setPosts(snapshot.docs.map(doc => ({id: doc.id, posts: doc.data()})));\n        })},\n        []);\n    //not dependent on posts now. cause we are mapping document id with each post.\n\n\n\n  return (\n    <div className = \"app\">\n        <Modal\n            open={open}\n            close={closeHandler}>\n            <div\n                className={classes.paper}\n                 style={modalStyle}>\n                 {body}\n            </div>\n        </Modal>\n\n        <div className= \"nav-bar\">\n          <img className=\"nav-bar-image\"\n               src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n               alt=\"insta-letter-logo\"\n          />\n      </div>\n\n        <Button\n            onClick={() => setOpen(true)}>\n            Sign Up\n        </Button>\n        {\n            posts.map(({id, posts}) => (\n                <Post\n\n                    key={id}\n                    //mapping document id so that react doesn't re-render a post that is already showing.\n                    userName={posts.userName}\n                    captions={posts.captions}\n                    imageUrl={posts.imageUrl}\n                    postAvatar={posts.postAvatar}/>\n            ))\n        }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}